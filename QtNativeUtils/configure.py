import os
import sipconfig
from PyQt4 import pyqtconfig

# The name of the SIP build file generated by SIP and used by the build
# system.
build_file = 'sip-generated/QtNativeUtils.sbf'

# Get the PyQt configuration information.
config = pyqtconfig.Configuration()

# Get the extra SIP flags needed by the imported qt module.  Note that
# this normally only includes those flags (-x and -t) that relate to SIP's
# versioning system.
qt_sip_flags = config.pyqt_sip_flags

# Run SIP to generate the code.  Note that we tell SIP where to find the qt
# module's specification files using the -I flag.

command = [config.sip_bin,
           '-e',
           '-o',
           '-c', './sip-generated',
           '-b', build_file,
           '-I', config.pyqt_sip_dir,
           '-I', 'src',
           '-I', 'src/mouseevents',
           qt_sip_flags,
           'sip/QtNativeUtils.sip']

command = ' '.join(command)
print command
os.system(command)

# We are going to install the SIP specification file for this module and
# its configuration module.

# Create the Makefile.  The QtModuleMakefile class provided by the
# pyqtconfig module takes care of all the extra preprocessor, compiler and
# linker flags needed by the Qt library.
makefile = pyqtconfig.QtGuiModuleMakefile(configuration=config,
                                          build_file=build_file,
                                          makefile='sip-generated/Makefile')

# Add the library we are wrapping.  The name doesn't include any platform
# specific prefixes or extensions (e.g. the 'lib' prefix on UNIX, or the
# '.dll' extension on Windows).
makefile.LFLAGS.append('-L../build')
makefile.extra_libs.append('QtNativeUtils')
makefile.extra_include_dirs.append('../src')
makefile.extra_include_dirs.append('../src/mouseevents')
makefile.extra_cflags.append('-std=c11')
makefile.extra_cxxflags.append('-std=c++11')
makefile.extra_cxxflags.append('-Wno-deprecated')
makefile.extra_cxxflags.append('-Wno-unused-parameter')
makefile.extra_cxxflags.append('-Wno-unused-function')


# Generate the Makefile itself.
makefile.generate()
